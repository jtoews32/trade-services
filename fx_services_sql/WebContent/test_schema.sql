DROP TABLE IF EXISTS HOURLY_PL_TEN;

CREATE TABLE HOURLY_PL_TEN (
	CREATED TIMESTAMP,
	INFO VARCHAR(128)
);










-- CALIBRATION BEFORE RECIEVING NEW DATA 
--  SET ACTIVE RECORD AND PREVIOUS ACTIVE RECORDS
CREATE TRIGGER OCCURENCE_BFI_TRIG BEFORE INSERT ON OCCURENCE 
FOR EACH ROW 
BEGIN 
   DECLARE cross_currency VARCHAR(16); 
   SET cross_currency = new.CROSS_CURRENCY;

   UPDATE OCCURENCE SET PREV_ACTIVE=0 WHERE PREV_ACTIVE=1 and CROSS_CURRENCY=cross_currency;
   UPDATE OCCURENCE SET ACTIVE=0, PREV_ACTIVE=1 WHERE ACTIVE=1 and CROSS_CURRENCY=cross_currency;
   
   -- set new.salary = new.salary + 400
END



-- SEND INFOMRATION TO THE PIP SPREAD TABLE
-- PREPARE AND SEND ACTIVE RECORD TO THE OCCURENCE TABLE
-- SEND INFORMATION TO THE EXTREME CASE ANALYZER

CREATE TRIGGER TRG BEFORE INSERT ON CURRENCY_PRICE
	FOR EACH ROW
BEGIN
	DECLARE num_row INTEGER;
	DECLARE tot_reads INTEGER;
	DECLARE price DOUBLE;
	
	SELECT MAX(READ_COUNT) INTO tot_reads FROM CURRENCY_PRICE WHERE CROSS_CURRENCY = new.CROSS_CURRENCY;
	
	IF tot_reads > 0 THEN
		SELECT price WHERE cross_currency = CROSS_CURRENCY AND READ_COUNT = period - 1;		
	
	ELSE 
	
	
	END IF;
	
	SELECT COUNT(*) INTO tot_rows FROM CURRENCY_PRICE WHERE employee = new.employee;
	
	SELECT COUNT(*) INTO num_rows FROM PERFORMANCE WHERE employe = new.employee;

	IF num_rows > 0 THEN


	ELSE


	END IF;
END;


CREATE TRIGGER CUR_PRICE_AFI_TRIG BEFORE INSERT ON CURRENCY_PRICE 
FOR EACH ROW 
BEGIN 
   DECLARE cross_currency VARCHAR(16); 
   SET cross_currency = new.CROSS_CURRENCY;

   UPDATE OCCURENCE SET PREV_ACTIVE=0 WHERE PREV_ACTIVE=1 and CROSS_CURRENCY=cross_currency;
   UPDATE OCCURENCE SET ACTIVE=0, PREV_ACTIVE=1 WHERE ACTIVE=1 and CROSS_CURRENCY=cross_currency;
   
   -- set new.salary = new.salary + 400
END










CREATE TRIGGER CUR_PRICE_AFI_TRIG BEFORE INSERT ON CURRENCY_PRICE
	FOR EACH ROW
BEGIN
	
	IF SELECT MAX(READ_COUNT) == 0 FROM CURRENCY_PRICE;
		return;
		
	
	
	DECLARE cross_currency = new.
	DECLARE period = new.
	DECLARE new_price = new.price
	

	SELECT price WHERE cross_currency = CROSS_CURRENCY AND READ_COUNT = period - 1;
	
	if ( new_price > price )
		change = new_price - price;
	else 
		chnage = price = new_price;
		
	INSERT INTO PIP_SPREAD (ID, PERIOD, CROSS_CURRENCY, DIFF) VALUES ( );
	
	ID integer not null,
	PERIOD integer not null,
	CROSS_CURRENCY varchar(16),	
	DIFF double,
	PRIMARY KEY (ID)	
	-- UPDATE OCCURENCE
	
	-- UPDATE PIP
	
	-- UPDATE OCCURENCE SET Salary=Salary-300 WHERE Perks>500;
END;
